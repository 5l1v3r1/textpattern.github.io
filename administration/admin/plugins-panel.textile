---
layout: document
category: administration
published: true
title: "Plugins"
tags:
  - plugins
  - extension
---

"Main ToC":http://docs.textpattern.io ⨠ Administration ⨠ **Admin** ⨠  **Plugins**

h1. Plugins

Textpattern by itself is capable of doing a lot, and especially as you learn to use __forms__ and __"core tags":http://docs.textpattern.io/tags/__ in increasingly sophisticated ways. When certain requirements cannot be met, or easily, by core ingenuity alone, Textpattern can be extended with plugins, whether to produce content and behaviour for the front-side experience, enhance the configurability or usability of the admin-side, or both -- or even more.[1] Most plugins essentially extend functionality by providing you with more specific tags that can be used in combination with Textpattern's own core set, and, as usual, inline with HTML.

The **Plugins** panel is composed of two main sections: a top **Install plugin** field for adding plugin files and uploading them, and a table display for seeing and managing the plugins you've uploaded. The table will be empty after a new Textpattern installation.

fn1. While plugins can do many wonderful things, the prudent -- even zen -- website owner (particularly the site architect) is encouraged to adopt a frugal plugin habit and become a Textpattern jedi. That is to say, only install plugins if while learning Textpattern you discover you really do need them. (Don't install a bunch because they sound cool, or because the promise of one plugn tag seems better than, say, five core tags that can provide the same result when combined correctly.) The zen habit favours two beneficial states. First, you learn to master Textpattern faster by spending more time initially learning core capabilities. Second, fewer plugins means less need to update the ones you have, less likelihood to run into troubleshooting issues after updating Textpattern in the future, and improves system security by having fewer third-party vectors for possible exploitation. Be one with the Force.

h2(#sec1). Uploading plugins

Installing a plugin goes something like this:

# Find the plugin file you want.
# Copy the plugin file to your clipboard.
# Paste the file into the **Install plugin** textarea box at top of the panel.
# Click the **Upload** button to verify contents.
# Click the **Install** button to finish installation and add plugin to the plugin table.
# When ready, activate the plugin by clicking the "No" link under the **Active** column in the table. 

Most of that is pretty straight forward, but let's touch upon steps 1, 2, and 4 a bit more.

h3. Finding plugins

At this time, the Textpattern project doesn't have a centralised repository for all its community-built plugins, but plugin developers (often called "plugin authors") generally proceed by the following process to make their plugins available, and thus for others to find them:

**Developer websites**. First, plugin developers typically make their plugins available at their own websites, and once you know who those plugin developers are, you can find their websites via their forum profiles, and often their specific plugin links in the signatures of their forum posts.[2]

**Plugin author support forum**. Second, plugin developers will initially announce their plugins by creating a plugin support thread for each one in the "Plugin author support":http://forum.textpattern.com/viewforum.php?id=79 forum. This provides a vector for finding plugins by monitoring the forum activity or using the forum's search. These plugin threads are also where you ask questions about using a given plugin, or share ideas for its improvement.[3]

**Plugin archive**. Third, plugin developers will generally (not always) add their plugin to the "plugins archive":http://textpattern.org/plugins at textpattern.org. This is an old site (disregard the lack of brand cohesion) that may one day become the official central plugin repository that the Textpattern project desparately needs. For now, it's just another possible location to look.

**Github**. Finally, plugin developers are increasingly using Github to archive and maintain their plugins, but there's not a lot of momentum in this direction yet, nor is there a convenient listing of those authors that are going this way.

Use the search or category filtering to find the functionality or focus you are after and download it. (As an alternative to the search, you can scan through the "entire list of plugins":http://textpattern.org/archives?section=plugins.)

fn2. Plugin authors have been known to abandon their plugins and websites over time, so relying on a plugin author's website alone is not always possible.

fn3. This has always been the most popular way for people to discover plugins, but your kilometrage will vary.

h3. Plugin file anatomy

The plugin itself is a text (.txt) file. It usually has a header stating the name of the plugin and other details, then the code itself in "Base-64":http://en.wikipedia.org/wiki/Base64 format. Following an hypothetical example showing the exact structure of a given file. The Base-64 part on the bottom would normally be much longer, so be sure to copy the _entire_ file when you really do go after one:

bc.. # Name: abc_myplugin v0.1
# Type: Client side plugin
# Brief description of the plugin
# Author: A.N. Other
# URL: http://domain.tld/
# Recommended load order: 5

# .....................................................................
# This is a plugin for Textpattern - http://textpattern.com/
# To install: textpattern &gt; admin &gt; plugins
# Paste the following text into the 'Install plugin' box:
# .....................................................................

YTo5OntzOjQ6Im5hbWUiO3M6Njoic21kX2lmIjtzOjY6ImF1dGhvciI7czoxMToiU3RlZiBE
YXdzb24iO3M6MTA6ImF1dGhvcl91cmkiO3M6MjI6Imh0dHA6Ly9zdGVmZGF3c29uLmNvbS8i
O3M6NzoidmVyc2lvbiI7czo0OiIw...

p. 



h2(#sec2). Managing plugins




h3(sectionedit3#installing_plugins). Installing plugins

Plugin installation is a simple three-step process:

<ol>
<li>Copy the entire file contents, paste it into the box at the top of the Plugins panel, and click “Upload”.</li>
<li>You will be shown a preview of the plugin and its documentation. If it looks ok, click “Install” at the bottom of the screen.</li>
<li><p>You will be returned to the plugin list when the plugin has been installed. Now activate the plugin by clicking its</p>
bc. No


<p>link, which toggles the status to</p>
bc. Yes


<p>, and it's not active.</p></li>
</ol>

Check the plugin help file (click _Help_ on the same row as the plugin name) after installation because some of them have post-install instructions or other information. If you have read the docs, check the "Plugin Author Support forum":http://forum.textpattern.com/viewforum.php?id=79 for the plugin. Known issues are often highlighted in the threads there (tip: use Google to search long threads!) or, if not, you can post your questions.

h4(#upgrading_plugins). Upgrading plugins

Upgrading plugins is the same process. Install the new text file code as you would normally. In this case, the existing plugin is updated with the code revisions.

In case you've edited plugins, there's another plugin that helps you track down the lines that you've altered, "rvm_plugin_diff":http://forum.textpattern.com/viewtopic.php?id=19909. Use it before upgrading plugins.

h4(#installation_problems). Installation problems

Sometimes large plugins can cause problems and you get a

bc. Badly formed or empty plugin code


error. This can usually be solved by obtaining a compressed plugin. These are functionally equivalent to standard plugins but begin with a sequence that looks like this:

bc. H4sIAAAAAAAAA919a3PbRrbg56Rq/kOH8UTkDiWKkh+xJCtXsWWPZxXHa8meeyvjUoFEk8QY
BGgAlKz1+L/vefULACk6dvZO3amJRTYa53SfPn3e3YwOHh58LA/uHnSyaK47h+XB/YNOOY8v
k4l8iZbVLC/wy3B40Dmv9EQ9...


You require gzip on your server to be able to install such plugins (most do).

h4(#plugin_cache_directory). Plugin cache directory

Plugins that you install via the Admin → Plugins tab are inserted into the database. There is another method of installing a plugin that involves obtaining the plugin as a file in the "standard template format":/home/www/zendstudio/dokuwiki/bin/doku.php?id=plugin_template.

Visit the "advanced_preferences":/home/www/zendstudio/dokuwiki/bin/doku.php?id=advanced_preferences tab and enter a folder path/name to use as your plugin cache directory. Make sure it exists on your server!

When you have saved the changes, you may upload (via FTP) plugins in the standard template format (_not_ the Base-64 method outlined above)into this nominated directory. Once uploaded, they will be available automatically and are “always on”, but otherwise behave in the same manner as regular plugins.

h3(sectionedit4#panel_layout_controls). Panel layout &amp; controls

Each installed plugin occupies one row in the table. The columns are:

*Plugin*
 The plugin name *Author*
 The author and current maintainer of the code, with a link to their home page *Version*
 The current plugin version *Modified*
 Whether the plugin has been changed by you since it was installed *Description*
 A brief piece of information about the plugin's reason for existence *Active*
 Whether the plugin is on (yes) or off (no). Click to toggle the status *Order*
 The plugin load order. Plugins with low numbers are loaded before plugins with higher numbers. Plugin authors can set recommendations because some types of plugin (e.g. anti-spam) might need to run before others in order to work effectively *Manage*
 Click 'Help' to see the associated plugin documentation Click 'Edit' to alter the plugin code Click 'Options' to alter plugin options (if any)

Use the check boxes and the _with selected_ tool (at the bottom of the list) to mark plugins for deletion or change the status/load order of more than one plugin at once.

h3(sectionedit5#editing_and_publishing_plugins). Editing and publishing plugins

You can either edit plugin source code directly from the Plugins tab or use a third party tool such as the "plugin_template":/home/www/zendstudio/dokuwiki/bin/doku.php?id=plugin_template or the "ied_plugin_composer plugin":http://forum.textpattern.com/viewtopic.php?pid=201350#p201350.

The plugin composer allows you to create, code and document plugins, then publish them in either conventional text format, compressed text format, or exported in the standard template format for sharing with developers or using in the "plugin cache directory":/home/www/zendstudio/dokuwiki/bin/doku.php?id=advanced_preferences. Plugins in the cache can also be edited directly by the Composer.

Before embarking on your own plugin, it is worth following these steps:

# read the "plugin_vs_core":/home/www/zendstudio/dokuwiki/bin/doku.php?id=plugin_vs_core topic to understand the stance the Textpattern developers take on what should (and should not) be a core feature and what might work best as a plugin
# check a core tag does not do what you want already
# check a "plugin does not already exist":http://textpattern.org/archives?section=plugins that performs your intended feature
# assuming you still wish to go ahead with the plugin (and you don't already have a plugin prefix), "register one":/home/www/zendstudio/dokuwiki/bin/doku.php?id=registered_textpattern_developer_prefixes for your own use
# read the "Plugin Development Guidelines":/home/www/zendstudio/dokuwiki/bin/doku.php?id=plugin_development_guidelines for more on how to write plugins

