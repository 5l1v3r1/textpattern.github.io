---
layout: document
category: development
published: true
title: "Core callbacks list"
tags:
  - development 
  - plugins
  - callbacks
  - core
---

h1. Core callbacks list

This is a reference of all callbacks used in Textpattern. 

h2(#sec1). Regular public-side callbacks

**_publish.php_**

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">
	
|_. @$event@ |_. When it occurs |_. What it allows/does |
| @pretext@ | at the very top of the  @pretext()@ function, just after the prefs have been extracted | - |
| @pretext_end@ | just after @pretext()@ has run but before its variables have been extracted into the global scope | overrides anything set in @pretext()@ or adds variables to it |
| @file_download@ | as soon as a file_download is detected | intercepts the regular file downloading process |
| @textpattern@ | just before the page is rendered | - |
| @textpattern_end@ | once the page has been fully rendered | - |

notextile. </div>

**_publish/atom.php_**

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. @$event@ |_. When it occurs |_. What it allows/does |
| @atom_head@ | after the feed's header has been set | adds items to the feed's header |
| @atom_entry@ | as soon as the article's data has been populated | injects extra markup after the standard feed items have been generated |

notextile. </div>

**_publish/rss.php_**

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. @$event@ |_. When it occurs |_. What it allows/does |
| @rss_head@ | after the feed's header has been set | adds items to the feed's header |
| @rss_entry@ | as soon as the article's data has been populated | injects extra markup after the standard feed items have been generated |

notextile. </div>

**_publish/comment.php_**

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. @$event@ |_. When it occurs |_. What it allows/does |
| @comment.form@ | at the end of the @commentForm()@ function | injects markup after the textarea generated by the @<txp:comment_message_input />@ |
| @comment.save@ | just before a comment is posted | makes additional decisions based on the comment content (e.g. anti-spam plugins) |
| @comment.saved@ | just after a comment is posted to the database | argument #3 is an array of name-value pairs containing the message text, name, email, web, parentid, commentid, ip, and visible status of the posted comment |

notextile. </div>

**_publish/log.php_**

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. @$event@ |_. When it occurs |_. What it allows/does |
| @log_hit@ | just before a log message is recorded in the txp_log table | alters the log message |

notextile. </div>

h2(#sec2). Function- and tag-based callbacks

**_lib/txplib_misc.php_**

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. @$event@ |_. @$step@ |_. When it occurs |_. What it allows/does |
| @sanitize_for_url@ | - | at the start of the @sanitizeForUrl()@ function | apply your own URL sanitization rules; passes the text to be sanitized as the callback's 4th argument |
| @sanitize_for_file@ | - | at the start of the @sanitizeForUrl()@ function | apply your own filename sanitization rules; passes the text to be sanitized as the callback's 4th argument |
| @sanitize_for_page@ | - | at the start of the @sanitizeForUrl()@ function | apply your own page name sanitization rules; passes the text to be sanitized as the callback's 4th argument |
| @txp_die@ | @http_status_code@ | once the page's HTTP status has been determined | passes the numerical HTTP status code as the callback's _step_ (e.g., @410@, @301@, etc) allowing you to target particular status codes and take action |

notextile. </div>

h2(#sec3). Plugin callbacks

**_include/txp_plugin.php_**

In order to process these callbacks, your plugin must raise the @PLUGIN_LIFECYCLE_NOTIFY@ flag to register its intent. In addition, if you wish to offer a link to your plugin's preferences from the  **"Plugins":http:docs.textpattern.io/administration/plugins-panel** panel, you must raise the @PLUGIN_HAS_PREFS@ flag.

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. @$event@ |_. @$step@ |_. When it occurs |_. What it allows/does |
| @plugin_lifecycle.abc_your_plugin@ | @enabled@ | when somebody switches abc_your_plugin to "Enabled" (Yes) from the **Plugins** panel | - |
| @plugin_lifecycle.abc_your_plugin@ | @disabled@ | when somebody switches abc_your_plugin to "Disabled" (No) on the **Plugins** panel | - |
| @plugin_lifecycle.abc_your_plugin@ | @installed@ | when abc_your_plugin has been installed by the act of the user pasting its code in the **Plugins** panel and clicking Install on the next screen | - |
| @plugin_lifecycle.abc_your_plugin@ | @deleted@ | when abc_your_plugin has been removed by the act of a user selecting it and deleting it from the **Plugins** panel (note that the @plugin_lifecycle.abc_your_plugin@ / @disabled@ callback fires first) | - |

notextile. </div>

h2(#sec4). Regular admin-side callbacks

**_lib/txplib_head.php_**

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. @$event@ |_. @$step@ |_. When it occurs |_. What it allows/does |
| @admin_side@ | @head_end@ | just before the closing @</head>@ tag on every admin-side panel | for injecting javascript or style rules into the page's header |
| @admin_side@ | @pagetop@ | immediately before control is handed to the theme | renders the navigation bar |
| @admin_side@ | @pagetop_end@ | immediately after the theme has finished | rendering the navigation bar useful for adding admin-wide markup below @pagetop@ |

notextile. </div>

**_lib/txplib_html.php_**

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. @$event@ |_. @$step@ |_. When it occurs |_. What it allows/does |
| @admin_side@ | @body_end@ | once the theme has rendered its footer | tacks on any extra admin-wide information immediately before the closing @</body>@ tag |
| @some_event_ui@ | @multi_edit_options@ | - | alters or augments the multi-edit select list; argument #3 contains the options array which is passed by reference so it may be altered directly |

notextile. </div>

**_include/txp_article.php_**

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. @$event@ |_. @$step@ |_. When it occurs |_. What it allows/does |
| @article_posted@ | - | immediately after article creation | - |
| @article_saved@ | - | immediately after article update/save | - |
| ping | - | just before a ping notification is sent upon publication of an article | so you may intercept the ping and provide your own |
| @article_ui@ | @partials_meta@ | - | alters or augments the interface, usually based on the data sent to/from the AJAX save process; argument #3 is the record set of the article being edited; argument #4 is the partials array comprised of a *_key_* (unique name of the item available to alter), then an array: *_mode_* (the mechanism by which the partial may be updated), *_selector_* (the wholly encapsulated DOM selector to which the partial applies), *_callback_* (the callback function to utilise to update the nominated part of the interface), and *_html_* (an optional return value of the callback function) |

notextile. </div>

**_include/txp_diag.php_**

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. @$event@ |_. @$step@ |_. When it occurs |_. What it allows/does |
| @diag_results@ | @high@ or @low@ | at the end of the @doDiagnostics()@ function | renders the content of the **"Diagnostics":http://docs.textpattern.io/administration/admin/diagnostics-panel** panel; allows you to add any extra information to the diagnostic output depending on the level of output the user has chosen (high or low) |

notextile. </div>

**_include/txp_admin.php_**

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. @$event@ |_. @$step@ |_. When it occurs |_. What it allows/does |
| @authors_deleted@ | - | just after user(s) have been deleted and all assets have been reassigned |  passes an array of deleted user names as a parameter |

notextile. </div>

**_include/txp_category.php_**

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. @$event@ |_. @$step@ |_. When it occurs |_. What it allows/does |
| @categories_deleted@ | - | just after one or more categories have been deleted and the tree has been rebuilt | passes an array of deleted category IDs as a parameter |

notextile. </div>

**_include/txp_css.php_**

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. @$event@ |_. @$step@ |_. When it occurs |_. What it allows/does |
| @css_deleted@ | - | just after a stylesheet has been deleted | passes the name of the deleted stylesheet as a parameter |

notextile. </div>

**_include/txp_discuss.php_**

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. @$event@ |_. @$step@ |_. When it occurs |_. What it allows/does |
| @discuss_deleted@ | - | just after one or more comments have been deleted, but _before_ the comment counts have been updated in the affected articles | passes an array of the deleted comment IDs as a parameter |

notextile. </div>

**_include/txp_file.php_**

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. @$event@ |_. @$step@ |_. When it occurs |_. What it allows/does |
| @file_deleted@ | - | just _before_ each file is deleted | first additional parameter is the file's ID; second additional parameter is the full path to the file |

notextile. </div>

**include/txp_form.php**

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. @$event@ |_. @$step@ |_. When it occurs |_. What it allows/does |
| @forms_deleted@ | - | just after one or more forms have been deleted | passes an array of deleted form names as a parameter |

notextile. </div>

**_include/txp_image.php_**

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. @$event@ |_. @$step@ |_. When it occurs |_. What it allows/does |
| @image_deleted@ | @image@ | just before an image and its thumbnail are deleted | passes the image ID  as a parameter |
| @image_uploaded@ | @image@ | just after an image has been uploaded or replaced by another image | passes the image ID as a parameter |

notextile. </div>

**_include/txp_link.php_**

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. @$event@ |_. @$step@ |_. When it occurs |_. What it allows/does |
| @links_deleted@ | - | just after one or more links have been deleted | passes an array of deleted link IDs as a parameter |

notextile. </div>

**_include/txp_list.php_**

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. @$event@ |_. @$step@ |_. When it occurs |_. What it allows/does |
| @articles_deleted@ | - | just after one or more articles have been deleted and any associated comments have had their visibility removed | passes an array of deleted article IDs as a parameter |

notextile. </div>

**_include/txp_page.php_**

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. @$event@ |_. @$step@ |_. When it occurs |_. What it allows/does |
| @page_deleted@ | - | just after a page template has been deleted | passes the name of the deleted page as a parameter |

notextile. </div>

**_include/txp_section.php_**

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. @$event@ |_. @$step@ |_. When it occurs |_. What it allows/does |
| @sections_deleted@ | - | just after one or more sections have been deleted | passes an array of deleted section names as a parameter |

notextile. </div>

h2(#sec5). Admin-side criteria callbacks

These callbacks allow you to alter the criteria used in the various panels. You can append SQL to the criteria so you may apply additional filtering. 

Note that the criteria is _appended_, so existing search parameters are honoured. Therefore your returned statement should begin with @" AND ..."@. If you wish to ignore any previous filtering, begin @" AND 1 AND ..."@.

The third argument to your callback function contains the current criteria used so you may make decisions based on its contents (e.g., you may not want to filter the results if a search has been performed).

The callbacks all have event = _admin_criteria_ and the following steps:

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. Panel |_. @$event@ |_. @$step@ |
| "Articles":http://docs.textpattern.io/administration/content/articles-panel | @admin_criteria@ | @list_list@ |
| "Comments":http://docs.textpattern.io/administration/content/comments-panel | @admin_criteria@ | discuss_list |
| "Files":http://docs.textpattern.io/administration/content/files-panel | @admin_criteria@ | @file_list@ |
| "Forms":http://docs.textpattern.io/administration/presentation/forms-panel | @admin_criteria@ | @form_list@ |
| "Images":http://docs.textpattern.io/administration/content/images-panel | @admin_criteria@ | @image_list@ |
| "Links":http://docs.textpattern.io/administration/content/links-panel | @admin_criteria@ | link_list |
| "Pages":http://docs.textpattern.io/administration/presentation/pages-panel | @admin_criteria@ | @page_list@ |
| "Sections":http://docs.textpattern.io/administration/presentation/sections-panel | @admin_criteria@ | @section_list@ |
| "Styles":http://docs.textpattern.io/administration/presentation/styles-panel | @admin_criteria@ | @css_list@ |
| "Users":http://docs.textpattern.io/administration/admin/users-panel | @admin_criteria@ | @author_list@ |
| "Visitor logs":http://docs.textpattern.io/administration/admin/visitor-logs-panel | @admin_criteria@ | @log_list@ |

notextile. </div>

h2(#sec6). Admin side validation callbacks

These callbacks allow you to alter or append to the constraints imposed by the core when saving data. Textpattern will check that the passed values for things like categories, sections, and so forth actually exist in the database to avoid new ones being introduced at unexpected places.

Inside plugins, you may wish to open up or restrict data in certain types of actions, or create entirely new constraints and take advantage of the built-in validator. If so, these callbacks are the ones to use.

These additional arguments are all passed by reference to your application, so you can alter them directly:

* Argument #3 is the incoming array of values posted from the save operation, unsanitized. 
* Argument #4 is the array of constraints.

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. Panel |_. @$event@ |_. @$step@ |
| "Articles":http://docs.textpattern.io/administration/content/articles-panel | @article_ui@ | @validate_save@ |
| "Articles":http://docs.textpattern.io/administration/content/articles-panel | @article_ui@ | @validate_publish@ |
| "Comments":http://docs.textpattern.io/administration/content/comments-panel | @discuss_ui@ | @validate_save@ |
| "Files":http://docs.textpattern.io/administration/content/files-panel | @file_ui@ | @validate_save@ |
| "Images":http://docs.textpattern.io/administration/content/images-panel | @image_ui@ | @validate_save@ |
| "Links":http://docs.textpattern.io/administration/content/links-panel | @link_ui@ | @validate_save@ |

notextile. </div>

h2(#sec7). pluggable_ui() callbacks

Argument #1 passed to your function is the _event_ and argument #2 is the _step_. Arguments 3 and 4 (and occasionally 5) vary depending on the functionality of the UI component. In general, the following holds true unless otherwise stated:

* Argument #3 is the default markup.
* Argument #4 is the record set of the item that is being edited (if applicable).

Parsing argument #3 allows you to alter what was originally going to be displayed, and then return it. Or you may discard this markup and return your own instead.

**_include/txp_article.php_**

For the **"Write":http://docs.textpattern.io/administration/content/write-panel** panel only. The @$event@ is the same in each case.

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. Panel |_. @$event@ |_. @$step@ |_. What it alters or replaces |
| Write | @article_ui@ | @sidehelp@ | the 'Textile Help' lever and its entire contents |
| " | " | @extend_col_1@ | *adds* (not alters or replaces) your own markup below the @sidehelp@; argument #3 is empty as there is no default content here |
| " | " | @markup@ | the two select lists for article and excerpt markup |
| " | " | @override@ | the **Override form** select list |
| " | " | @view@ | the view/HTML/Preview icons |
| " | " | @sort_display@ | the **Section** and **Category** select lists |
| " | " | @timestamp@ | the article's **Date and time** area |
| " | " | @expires@ | the article expiry area |
| " | " | @custom_fields@ | the **Custom fields** block of input controls |
| " | " | @keywords@ | the **Keywords** field |
| " | " | @article_image@ | the Article image area |
| " | " | @url_title@ | the URL title input area |
| " | " | @recent_articles@ | the recent articles list |
| " | " | @title@ | the article's title element |
| " | " | @body@ | the article's body element |
| " | " | @excerpt@ | the article's excerpt element |
| " | " | @author@ | the author / published-at info |
| " | " | @status@ | the article's status area |
| " | " | @categories@ | the article's category1/category2 area |
| " | " | @section@ | the article's section select list |
| " | " | @annotate_invite@ | the article's comments on/off and comments invite area |

notextile. </div>

**_include/txp_category.php_**

For the **"Categories":http://docs.textpattern.io/administration/content/categories-panel** panel.

notextile. <div class="tabular-data" itemscope itemtype="http://schema.org/Table">

|_. Panel |_. @$event@ |_. @$step@ |_. What it allows/does |
| Categories | @category_ui@ | @extend_detail_form@ | adds markup above the category _Save_ button when editing an individual category argument #3 is empty because there is no default content |

notextile. </div>

**_include/txp_image.php_**

For the **"Images":http://docs.textpattern.io/administration/content/images-panel** panel.

|_. Panel |_. @$event@ |_. @$step@ |_. What it allows/does |
| Images | @image_ui@ | @extend_controls@ | adds markup to the txp-control-panel area; argument #3 is empty because there is no default content |
| Images | @image_ui@ | @extend_detail_form@ | adds markup above the image **Save** button when editing an image argument #3 is empty because there is no default content |
| Images | @image_ui@ | @thumbnail@ | alters or replaces the thumbnail in the image list |
| Images | @image_ui@ | @fullsize_image@ | alters or replaces the main image in the image edit panel |
| Images | @image_ui@ | @image_edit@ | alters or replaces the area containing the upload (replace) image form |
| Images | @image_ui@ | @thumbnail_image@ | alters or replaces the thumbnail image in the image edit panel |
| Images | @image_ui@ | @thumbnail_edit@ | alters or replaces the area containing the thumbnail upload form |
| Images | @image_ui@ | @thumbnail_create@ | alters or replaces the 'thumbnail create' area containing the width / height input fields and crop checkbox |

notextile. </div>

h4(#files_panel_code_include_txp_filephp_code). Files panel (&lt;code&gt;include/txp_file.php&lt;/code&gt;)

*event = _file_ui_ step = _extend_detail_form_*
 allows you to add markup above the file _Save_ button when editing a file argument #3 is empty because there is no default content the same callback is used whether the file you are editing exists or is missing from the database  -  use the absence or availability of the 4th argument (record set) to determine which state the panel is in

h4(#links_panel_code_include_txp_linksphp_code). Links panel (&lt;code&gt;include/txp_links.php&lt;/code&gt;)

*event = _link_ui_ step = _extend_detail_form_*
 allows you to add markup above the link _Save_ button argument #3 is empty because there is no default content

h4(#sections_panel_code_include_txp_sectionphp_code). Sections panel (&lt;code&gt;include/txp_section.php&lt;/code&gt;)

*event = _section_ui_ step = _extend_detail_form_*
 allows you to add markup immediately above the _Save_ button in the _section edit_ panel argument #3 is empty because there is no default content the record set in argument #4 contains only the columns _page_ and _css_ when in the default area, and contains all columns at other times

h4(#users_panel_code_include_txp_adminphp_code). Users panel (&lt;code&gt;include/txp_admin.php&lt;/code&gt;)

*event = _author_ui_ step = _extend_detail_form_*
 allows you to add markup immediately above the author _Save_ button argument #3 is empty because there is no default content

h4(#preferences_panel_code_include_txp_prefsphp_code). Preferences panel (&lt;code&gt;include/txp_prefs.php&lt;/code&gt;)

*event = _prefs_ui_ step = _gmtoffset_*
 allows you to alter or replace the _Time zone_ select list (just the input control, not the label) argument #4 is the preference name in the txp_prefs table (_timezone_key_ in this case) argument #5 is the preference's value (i.e. the chosen item) *event = _prefs_ui_ step = _is_dst_*
 allows you to alter or replace the _DST enabled_ radio buttons (just the input control, not the label) argument #4 is the preference name in the txp_prefs table (_is_dst_ in this case) argument #5 is the preference's value (i.e. the numerical state of the radio button) *event = _prefs_ui_ step = _weeks_*
 allows you to alter or replace the _Comments disabled after_ select list (just the input control, not the label) argument #4 is the preference name in the txp_prefs table (_comments_disabled_after_ in this case) argument #5 is the preference's value (i.e. the numerical value of the selected item; in this case the number of days to keep commenting open) *event = _prefs_ui_ step = _custom_set_*
 allows you to alter or replace the Custom Field text boxes on the Advanced Prefs panel (just the input controls, not the labels). Each text box is called separately; you distinguish between them using argument #4 argument #4 is the preference name in the txp_prefs table (_custom_set_N_ by default, where _N_ is the custom field number) argument #5 is the preference's value (i.e. the name of the custom field) *event = _prefs_ui_ step = _theme_name_*
 allows you to alter or replace the _Admin theme_ select list on the Advanced Prefs panel (just the input control, not the label)

h2(#sec8). Theme callbacks

The following callbacks are all usable to alter various elements within admin-side themes.

h4(#code_lib_txplib_themephp_code). &lt;code&gt;lib/txplib_theme.php&lt;/code&gt;

*event = _admin_side_ step = _theme_name_*
 allows you to alter a theme's name when it is being initialised there is no argument #4

h4(#code_lib_txplib_headphp_code1). &lt;code&gt;lib/txplib_head.php&lt;/code&gt;

*event = _admin_side_ step = _header_*
 allows you to replace the standard pagetop header with something of your choosing. Theme authors do this by writing a

bc. header()


function in their theme's PHP file there is no argument #4

h4(#code_lib_txplib_htmlphp_code1). &lt;code&gt;lib/txplib_html.php&lt;/code&gt;

*event = _admin_side_ step = _footer_*
 allows you to replace the standard end_page footer with something of your choosing. Theme authors do this by writing a

bc. footer()


function in their theme's PHP file there is no spoon *event = _some_event_ui_ step = _upload_form_*
 allows you to alter or replace Textpattern's standard upload forms throughout the admin side _some_event_ is the name of the event on the panel upon which the input form appears (e.g. on the Files panel, the event is 'file' so the

bc. pluggable_ui()


event name is _file_ui_) argument #4 contains the remainder of the arguments to the

bc. upload_form()


function, i.e. 'label', 'pophelp', 'step', 'event', 'id', 'max_file_size', 'label_id' and 'class'.

