---
layout: document
category: development
published: true
title: "Textpattern repositories"
tags:
  - development 
  - installation
  - versions
  - git
  - Github
  - repository
  - source code
---

h1. Textpattern source code repositories

All Textpattern code repos are now maintained at Github and collectively detailed here for documentation convenience.

On this page:

* "Source code options":#sec1
** "Production release":#sec1-1
** "Master (development) branch":#sec1-2
** "Legacy packages":#sec1-3
* "Working with Github":#sec2
** "Github client":#sec2-1
** "Command-line (git)":#sec2-2

h2(#sec1). Source code options

The current stable release, the latest bleeding-edge nightlies, and the old legacy packages are all available.

h3(#sec1-1). Production release

The production release -- or *latest stable release* -- is for the average user who wants the most secure version of Textpattern available. They are terminal branches (or "snapshots") from the master repo at particular development milestones. When new production releases are available, the previous release becomes obsolete in terms of developer support, so always update your Textpattern installations to the latest stable release when they're available.

* ".zip file download":http://textpattern.com/latest.zip (an immediate .zip package download from textpattern.com, no messing around) 
* "Zip package options":http://textpattern.com/download/ (choose either __.zip__ or __.tar.gz__, as you prefer) 

h3(#sec1-2). Master (development) branch

The *master branch* is where core developers work toward each new stable release. In other words, it's work-in-progress![1]. As such, this branch is ideal for plugin developers and feature testers, though it does draw a few _risk takers_ too (people who throw caution to the wind and use development code for a production website). 

The master branch can be worked with as it exists at any given moment, or by using one of the "nightly" builds (snapshots of the master branch's progress), the links to which are updated automatically as new nightlies are available:

* "Master branch":https://github.com/textpattern/textpattern
* "__.zip__ nightly":http://textpattern.com/file_download/73/textpattern-nightly.zip
* "__.tar.gz__ nightly":http://textpattern.com/file_download/72/textpattern-nightly.tar.gz

fn1. Core developers would like you to know that while the master branch is intended to be stable and reliable, bugs and omissions are occasionally introduced between stable releases.

h3(#sec1-3). Experimental branches

There are a number of *experimental branches*, each a separate tinkering on a particular new feature or three. The branches are not ready to merge into the master branch yet, which is why they're experimental. 

Experimental branches are a moving target, so they're not listed here to lower overhead, but you can find these branches by going to the "master branch":https://github.com/textpattern/textpattern in Github, clicking the **Branch** menu button (which will appear as "Branch: master"), and choosing one of the other branch options in the dropdown list.

h3(#sec1-4). Legacy packages

Legacy packages are "**past stable releases**":https://github.com/textpattern/textpattern/releases back to Textpattern's beginning (most packages are accounted for). If for some nutty reason you want to play around in outdated code, this is where to go. Each package is available in the __.zip__ and __.tar.gz__ options. This code is not supported, and the older it gets the more broken it will be. You are strongly advised _not_ to use outdated code for production websites.

h2(#sec2). Working with Github

Where any of the __.zip__ and __.tar.gz__ packages are concerned, you won't need to worry about using Github or having a Github account. But if you're a Github user, or would like to be, there are two main ways of working with the ["master branch":https://github.com/textpattern/textpattern]: either the Github GUI client or the git command-line client. Either way, you'll need to have a Github account, so if you don't have one, create one first.

When working with a repo in Github, you need to decide if you're going to _clone_ it or _fork_ it:

**Clone me.** When cloning a repo, you've made the decision to contribute back to the master repo branch, or whatever repo you may have cloned from. Cloning puts a copy of the repo on your local drive, where you can work on code (or copy, like this page, for example) on your own time and at your own pace. When ready to share back, you make a _pull request_, which is basically a request to the branch manager to merge your edits to the master repo's code. The branch manager can choose not to if your code is sketchy, but generally the intent is to collaborate harmoniously toward the good of all things.

**Fork off!** When forking a repo, you've essentially made the decision to run rogue with the code. You can change code however you want, but it won't get merged back to the repo you forked from. You're on your own.

In context of Textpattern, it's assumed you're going to clone if contributing to core code, or fork if you just want a sandbox to play and experiment in; say for plugin development reasons, for example.

h3(#sec2-1). Github GUI client

The Github GUI client may not be as flexible as the command-line client, but unless you're a command-line jedi master, the desktop client is easy to use. 

First you'll need to install the client, either "for Mac OSX":https://mac.github.com/help.html or "for Windows":https://windows.github.com/. Then fire it up and add your Github account details so Github and the client can "communicate" with one another.

%(error)[todo:finish tutorial about using GUI client with a repo]%

h3(#sec2-2). Git command-line client

The command-line also requires a client, the "git command-line client":https://git-scm.com/downloads (for most operating systems, including OS X).

Use the following command to clone the Textpattern master branch repository to your local drive:

bc. $ git clone https://github.com/textpattern/textpattern.git

You can use "git config":https://www.kernel.org/pub/software/scm/git/docs/git-config.html to set up a few things like your @user.name@ and @user.email@. Then youâ€™re free to make changes, publish them to your own Github repo, and issue a "Pull Request" to have your changes merged with the master branch. Or just create a diff patch and send that to Textpattern developers.

The experimental branches mentioned earlier can be explored using this command:

bc. $ git checkout name-of-branch

You can see the list of available branches using the @git branch@ command. To get back to your master copy, use @git checkout master@.
