\n"mininav&#95;tags":/home/www/zendstudio/dokuwiki/bin/lib/exe/fetch.php?id=&media=mininav_tags

bc(code). <txp:images />


The "images":/home/www/zendstudio/dokuwiki/bin/doku.php?id=images tag is a _single_ or _container_ tag that Textpattern will use to gather a list of matching images uploaded via the Textpattern "images&#95;panel&#95;":/home/www/zendstudio/dokuwiki/bin/doku.php?id=images_panel. Utilising the other image tags in the suite "image&#95;info":/home/www/zendstudio/dokuwiki/bin/doku.php?id=image_info, "image&#95;url":/home/www/zendstudio/dokuwiki/bin/doku.php?id=image_url, "image&#95;date":/home/www/zendstudio/dokuwiki/bin/doku.php?id=image_date and "if&#95;thumbnail":/home/www/zendstudio/dokuwiki/bin/doku.php?id=if_thumbnail) you can display simple image galleries from this list.

If used as a _container_ tag, it must be specified as an opening and closing pair of tags, like this:

bc(code). <txp:images>
...contained statements...
</txp:images>


This is equivalent to putting the contained statements into a form named “my&#95;form” and using

bc(code). <txp:images form="my_form" />


.

By default, the tag is context-sensitive, which means that in the absence of any filter attributes (*id*, *name*, *category*, *author*, *realname*, *extension*, *thumbnail*), it will return image IDs from the first of:

# the currently viewed article's *article&#95;image* field;
# images matching the global category context;
# images matching the global author context;
# all images.

In the _Article Image_ field of the "Write panel":/home/www/zendstudio/dokuwiki/bin/doku.php?id=write, you may put a comma-separated list of IDs, and this tag will treat them as a gallery.

h3(sectionedit1#attributes). Attributes

Tag will accept the following attributes (*case-sensitive*):

*"author":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#author=“author (login) ID”*
 Filter the images by this list of author IDs who uploaded the pictures to Textpattern. Default: unset. *"auto&#95;detect":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#auto_detect=“string context”*
 List of Textpattern contexts to consider when automatically searching for images. If you wish to turn off the automatic check, set this to *auto&#95;detect=““*. You can choose from the following contexts: *article* to look in the article&#95;image field *category* to look in the URL for a category list *author* to look in the URL for an author list Default: *article, category, author* *"category":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#category=“image category”*
 Filter the images by this list of category names as defined in the "categories":/home/www/zendstudio/dokuwiki/bin/doku.php?id=categories tab. *"extension":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#extension=”.extension”*
 Filter the images by this list of image extensions, including the leading dot. Example:

bc(code). extension=".jpg, .png"


Default: unset. *"form":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#form=“form name”*
 Use specified form for each image. If not used, and the container is empty, the tag will output a list of images that are compatible with "image&#95;display":/home/www/zendstudio/dokuwiki/bin/doku.php?id=image_display. Default: unset. *"html&#95;id":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#html_id=“id name value”*
 The HTML

bc(code). id


attribute applied to the

bc(code). wraptag


, if set, otherwise to the

bc(code). img


tag. Default: unset. *"id":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#id=“integer”*
 Filter the images by this list of

bc(code). id


s assigned at upload. The IDs can be found on the "images&#95;panel&#95;":/home/www/zendstudio/dokuwiki/bin/doku.php?id=images_panel. The order of the ids overrides the default 'sort' attribute. For example:

bc(code). <txp:images id="11,54,6,29" />


. Default: unset. *"limit":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#limit=“integer”*
 The number of images to display per page. Default:

bc(code). 0


(unlimited). *"name":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#name=“image name”*
 Filter the images by this list of image names as shown on the "images&#95;panel&#95;":/home/www/zendstudio/dokuwiki/bin/doku.php?id=images_panel. Default: unset. *"offset":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#offset=“integer”*
 The number of images to skip. Default:

bc(code). 0


. (Only effective if

bc(code). limit


is set.) *"pageby":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#pageby=“integer” (or* _“limit”_*)*
 The number of images to jump forward or back when an "older":/home/www/zendstudio/dokuwiki/bin/doku.php?id=older or "newer":/home/www/zendstudio/dokuwiki/bin/doku.php?id=newer link is clicked. Without this attribute, pagination is not available; you will simply see *limit* images. You may specify

bc(code). pageby="limit"


to allow pagination to automatically follow the value of the

bc(code). limit


attribute. NOTE: "newer":/home/www/zendstudio/dokuwiki/bin/doku.php?id=newer and "older":/home/www/zendstudio/dokuwiki/bin/doku.php?id=older will paginate all content types at once. Default: unset. *"realname":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#realname=“author name”*
 Filter the image list so it only includes images uploaded by this list of author real names. The author names may be URL encoded (e.g. *realname=“John+Smith”*) and thus could be read from the current site.com/author/author+name URL. Note that this attribute may incur one extra query per name, so if it is possible to use the raw author instead it will be faster. Default: unset. *"sort":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#sort=“sort value(s)”*
 How to sort the resulting image list. Specify an image attribute from the ones below and add either *asc* or *desc* to sort in ascending or descending order, respectively. Values:

bc(code). id


(image id#)

bc(code). name


(image name)

bc(code). category


bc(code). extension


(image extension)

bc(code). author


bc(code). alt


bc(code). caption


bc(code). date


bc(code). w


(image width)

bc(code). h


(image height)

bc(code). thumb_w


(image thumbnail width)

bc(code). thumb_h


(image thumbnail height)

bc(code). rand()


("random":http://dev.mysql.com/doc/refman/5.0/en/mathematical-functions.html#function_rand) Default:

bc(code). name asc


*"thumbnail":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#thumbnail=“boolean”*
 Filter the image list to only include images that have a thumbnail (

bc(code). 1


) or not (

bc(code). 0


). Default: unset (i.e. all images). Default: unset.

"common&#95;presentational&#95;attributes":/home/www/zendstudio/dokuwiki/bin/lib/exe/fetch.php?id=&media=common_presentational_attributes

h3(sectionedit2#examples). Examples

h4(#example_1varying_attributes). Example 1: varying attributes

This example shows the outcome of various attribute configurations to give you an idea of what to expect from the tag. More concrete examples follow.

NB: THESE MAY NOT BE CORRECT ANY MORE DUE TO TAG CHANGES SINCE THE EXAMPLES WERE WRITTEN. NEED VERIFICATION.

*&lt;code&gt;&lt;txp:images auto&#95;detect=“” /&gt;&lt;/code&gt;*
 displays all images in the database. *&lt;code&gt;&lt;txp:images auto&#95;detect=“” sort=“id desc” /&gt;&lt;/code&gt;*
 display all images in the database, sorted by

bc(code). id


in descending order. *&lt;code&gt;&lt;txp:images /&gt;&lt;/code&gt;*
 Context-sensitivity mode. Returns an image list based on the first of:

# article image field, if on an individual article page
# images matching category, if on a category list page
# images matching author, of on an author list page
# all images in the database

*&lt;code&gt;&lt;txp:images id=“” /&gt;&lt;/code&gt; &lt;code&gt;&lt;txp:images name=“” /&gt;&lt;/code&gt; &lt;code&gt;&lt;txp:images category=“” /&gt;&lt;/code&gt;*
 no images displayed. This means that if you did some tag-in-tag magic such as :

bc(code). category='<txp:custom_field name="my_cats" />'


it will show no images if the custom field is empty. *&lt;code&gt;&lt;txp:images id=“2,3,6” /&gt;&lt;/code&gt;*
 display images 2, 3, and 6. *&lt;code&gt;&lt;txp:images name=“lion.jpg, zebra.jpg” /&gt;&lt;/code&gt;*
 the named images are displayed. *&lt;code&gt;&lt;txp:images name=“pengiun.jpg” /&gt;&lt;/code&gt;*
 no images are displayed (mis-spelled image name). *&lt;code&gt;&lt;txp:images category=“mammals, birds” /&gt;&lt;/code&gt;*
 all images in the named categories are displayed. *&lt;code&gt;&lt;txp:images category=“, mammals, birds” /&gt;&lt;/code&gt;*
 all images in the named categories and any uncategorized images are displayed. *&lt;code&gt;&lt;txp:images category=“ ” /&gt;&lt;/code&gt;*
 just uncategorized images are displayed (note that

bc(code). category=","


also works, but a space looks better). *&lt;code&gt;&lt;txp:images author=“attenborough, morris” /&gt;&lt;/code&gt;*
 all images by author (ID) *attenborough* and *morris* are displayed. *&lt;code&gt;&lt;txp:images realname=“David+Attenborough” /&gt;&lt;/code&gt;*
 all images by author *David Attenborough* are displayed. This incurs one extra query to look up the author's ID from the given real name. *&lt;code&gt;&lt;txp:images category=“mammals, birds” author=“attenborough, morris” /&gt;&lt;/code&gt;*
 all images in the named categories that are assigned to the named authors are displayed. *&lt;code&gt;&lt;txp:images category=“mammals, birds” extension=“.jpg” /&gt;&lt;/code&gt;*
 all jpg images in the named categories are displayed. *&lt;code&gt;&lt;txp:images category=“mammals, birds” extension=“.jpg” author=“attenborough, morris” /&gt;&lt;/code&gt;*
 all jpg images in the named categories that are assigned to the named authors are displayed. *&lt;code&gt;&lt;txp:images extension=“.gif” /&gt;&lt;/code&gt;*
 all GIF images are displayed. *&lt;code&gt;&lt;txp:images category=“mammals, birds” thumbnail=“1” /&gt;&lt;/code&gt;*
 all images in the named categories that have thumbnails assigned to them are displayed. *&lt;code&gt;&lt;txp:images thumbnail=“1” /&gt;&lt;/code&gt;*
 all images that have thumbnails assigned to them are displayed. *&lt;code&gt;&lt;txp:images thumbnail=“0” /&gt;&lt;/code&gt;*
 all images that do not have thumbnails assigned to them are displayed.

h4(#example_2basic_thumbnail_grid_inside_an_article). Example 2: Basic thumbnail grid inside an article

A popular design pattern is to create a thumbnail grid of images inside an article, where each thumbnail is a link to the full-size image. The best way to achieve this is by using the "images":/home/www/zendstudio/dokuwiki/bin/doku.php?id=images tag in your article where the grid should appear, and calling a _Form_ that will generate each grid item.

The markup you use for your grid should reflect the kind of information you want to display. For example, if it's just going to be a grid of thumbnail images only, an unordered list is probably appropriate that wraps the thumbnails horizontally. But if you want to include text output for each image too (_e.g._, a small caption), then you might structure your grid as a series of figures with figure captions.

This example will demonstrate an horizontal grid of four images having captions, but you should be able to see how to modify the code for whatever HTML elements you want to use.

h5(#tag_structure_and_placement). Tag structure and placement

Let's say you have a paragraph of text, followed by your image grid, followed by another paragraph (or whatever) in your article:

<pre class="code">
...end of a paragraph.

&lt;txp:images id=&quot;n,n,n,n&quot; thumbnail=&quot;1&quot; form=&quot;image-grid&quot; wraptag=&quot;section&quot; class=&quot;thumbgrid&quot; break=&quot;figure&quot; /&gt;

Beginning of a new paragraph...
</pre>

The "images":/home/www/zendstudio/dokuwiki/bin/doku.php?id=images tag in this example is using three content attributes (

bc(code). id


,

bc(code). thumbnail


, and

bc(code). form


) and three presentation attributes (

bc(code). wraptag


,

bc(code). class


, and

bc(code). break


). The order in which you position any of the attributes in the "images":/home/www/zendstudio/dokuwiki/bin/doku.php?id=images tag makes no difference. Do it the way it makes sense to you.

Note that for small grids of a few images like this, using the

bc(code). id


attribute to call the images individually is the best way to go â€” it keeps your categories to a minimum. On the other hand, if you expect to have _many_ images in your grid (say, more than ten), you might just assign them to a unique category (using

bc(code). category="name"


) then call the images by their assigned category instead.

The

bc(code). thumbnail


attribute is necessary to display the thumbnails of the images rather than the full-size images. For this to work, the thumbnails for each image must be created first in the "Images panel":/home/www/zendstudio/dokuwiki/bin/doku.php?id=images_panel. Since most people want responsive web designs anymore, make your thumbnails reasonably big: 300px[^2^] is good.

The

bc(code). form


attribute is needed to call the name of your grid form, which we'll come back to below. Give it a meaningful but generic name because you can reuse the _Form_ for other grids.

The three presentational attributes are saying:

bc(code). wraptag


=“use this HTML element as the container for my grid”;

bc(code). class


=“use this class name as the selector for the container”;

bc(code). break


=“use this HTML element around each grid item”. In our example, the HTML elements chosen are

bc(code). section


and

bc(code). figure


, and the class selector name is “thumbgrid”. The

bc(code). fig caption


will be added by way of the _Form_.

h5(#thumbnail_grid_form). Thumbnail grid //Form//

Now create a new miscellaneous _Form_ called “image-grid” and put this code in it:

bc(code). <a href="<txp:image_url />"><img src="<txp:image_url thumbnail="1" />" /></a>
<figcaption><txp:image_info /></figcaption>


The code above will be used for each grid item when output in your article. It's basically saying 'here's the thumbnail image and the link path we want to put on it, and here's the caption that should go with it.

Conceptually speaking, when called into the "images":/home/www/zendstudio/dokuwiki/bin/doku.php?id=images tag in your article, the basic HTML structure output will look like this:

bc(code). <section class="thumbgrid">
    <figure>
        <a><img></a>
        <figcaption>...</figcaption>
    </figure>
    <figure>
        <a><img></a>
        <figcaption>...</figcaption>
    </figure>
    Etc.
</section>


h5(#baseline_css_for_the_grid). Baseline CSS for the grid

The grid described above will need styling, and you're responsible for that, but following are a few base rules to start with. These are for desktop layouts, but assumes you want a responsive design and the rest of your CSS is in that direction:

<pre class="code">
.thumbgrid {
  width: auto;
  margin: 1em 0;
  text-align: center;
}

.thumbgrid &gt; figure {
  width: 21%;
  display: inline-block;
  float: none; /* this is the part that makes horizontal layout work */
  vertical-align: top; /* needed because caption lengths likely vary */ 
}

.thumbgrid &gt; img {
  padding: 2%;
}
</pre>

h4(#example_3multiple_pieces_of_information_at_once_using_images_tag_as_wrapper). Example 3: Multiple pieces of information at once, using images tag as wrapper

bc(code). <txp:images category="birds, mammals" thumbnail="1" sort="category asc">
  <txp:if_different>
    <h4><txp:image_info type="category_title" /></h4>
  </txp:if_different>
  <txp:thumbnail wraptag="div" />
  <txp:image_info type="w, h" wraptag="div" class="img_dims" break=" x " />
  by <txp:image_info type="author" />
</txp:images>


*What it does...*
 Shows the thumbnail of each image that has an assigned thumbnail image from the *mammals* and *birds* categories and, beneath each, show its dimensions *width* x *height* along with the author of the image. Since the list has been sorted by category, the

bc(code). <txp:if_different>


conditional can be used to output the category title at the top of the list of images each time it changes.

Other tags used: "image&#95;info":/home/www/zendstudio/dokuwiki/bin/doku.php?id=image_info, "thumbnail":/home/www/zendstudio/dokuwiki/bin/doku.php?id=thumbnail, "if&#95;different":/home/www/zendstudio/dokuwiki/bin/doku.php?id=if_different

h4(#example_4integration_with_third-party_php_resizing_script). Example 4: Integration with third-party PHP resizing script

<pre class="code">
&lt;txp:images limit=&quot;6&quot; category=&quot;gallery&quot;&gt;

  &lt;a href=&quot;&lt;txp:image_url /&gt;&quot; title=&quot;Click to view original&quot;&gt;
    &lt;img src=&quot;&lt;txp:site_url /&gt;timthumb.php?src=&lt;txp:image_url /&gt;&amp;w=200&quot; alt=&quot;&lt;txp:image_info type='alt' /&gt;&quot; /&gt;
  &lt;/a&gt;
  
  &lt;dl&gt;
    &lt;dt&gt;Author:&lt;/dt&gt;
    &lt;dd&gt;&lt;txp:image_author /&gt;&lt;/dd&gt;
  &lt;/dl&gt;

&lt;/txp:images&gt;
</pre>

*What it does*
 Creates a small gallery of 6 images from the category “gallery”. Uses the "timthumb":http://www.binarymoon.co.uk/projects/timthumb/ script to proportionately resize a thumbnail version (200px wide) of the image automatically, and keep a cached version of the thumbnail for other visitors. Links the thumbnail to the original image, and lists the image author name below each thumbnail.

h3(sectionedit3#genealogy). Genealogy

h4(#version_450). Version 4.5.0

* Sort order of id attribute maintained, unless overridden with sort attribute.

h4(#version_430). Version 4.3.0

* tag introduced

