\n"mininav&#95;tags":/home/www/zendstudio/dokuwiki/bin/lib/exe/fetch.php?id=&media=mininav_tags

bc(code). <txp:article_custom />


The "article&#95;custom":/home/www/zendstudio/dokuwiki/bin/doku.php?id=article_custom tag is a _single_ or a _container_ tag that provides a variety of custom options for sorting, selecting, and displaying articles (the tag will be replaced with one or more articles).

If used as a container, it must be specified as an opening and closing pair of tags, like this:

bc(code). <txp:article_custom>
...contained statements...
</txp:article_custom>


This is equivalent to putting the contained statements into a form named “my&#95;form” and using

bc(code). <txp:article_custom form="my_form" />


.

Unlike the "article":/home/www/zendstudio/dokuwiki/bin/doku.php?id=article tag, "article&#95;custom":/home/www/zendstudio/dokuwiki/bin/doku.php?id=article_custom will always return an article list and _is not context-sensitive_. This means while the "article":/home/www/zendstudio/dokuwiki/bin/doku.php?id=article tag can only see posts within the currently viewed section/category/author and so forth, "article&#95;custom":/home/www/zendstudio/dokuwiki/bin/doku.php?id=article_custom can see all posts from all sections, categories and authors unless you restrict it via attributes (see below), thus _context-sensitive navigation tags, such as "older":/home/www/zendstudio/dokuwiki/bin/doku.php?id=older and "newer":/home/www/zendstudio/dokuwiki/bin/doku.php?id=newer, will not work_.

"A comparison of how article and article&#95;custom differ":http://textpattern.org/tips/337/article-vs-articlecustom.

h3(sectionedit1#attributes). Attributes

Tag will accept the following attributes (*case-sensitive*):

*"id":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#id=“article ID”*
 Display the specific article or list of articles (each ID separated by a comma). *IMPORTANT*: When a list is supplied, this does _not_ imply a sort order (see "Example 6":#example_6_select_by_id). Default: unset. *<em>"customfieldname":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#customfieldname</em>=“value”*
 Restrict to articles with specified value for specified custom field name. Replace “_customfieldname_” with the name of the custom field. *IMPORTANT*: Using dashes (-) or spaces may cause errors or render this feature ineffectual. Underscores in both custom field names and values are confirmed to work. Default: unset. *"section":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#section=“section name”*
 Restrict to articles from specified section(s). Value: (comma separated list of) section name(s). Default: unset, retrieves from all sections. *"category":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#category=“category name”*
 Restrict to articles from specified category/ies. Note: the category names may be different to the Title you typed when you created the category, as the names are sanitized for URL use. Check the "categories":/home/www/zendstudio/dokuwiki/bin/doku.php?id=categories tab to ensure you are using the correct names. Value: (comma separated list of) category name(s). Default: unset, retrieves from all categories. *"keywords":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#keywords=“keyword(s)”*
 Restrict to articles with specified keyword(s). Default: unset. *"excerpted":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#excerpted=“y”*
 Restrict to articles with/without an excerpt. Value:

bc(code). y


(yes, return only those containing an excerpt). Default: unset (no, return all). *"status":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#status=“status”*
 Restrict to articles with the specified status. Values:

bc(code). live


or

bc(code). sticky


. Default:

bc(code). live


. *"time":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#time=“time”*
 Restrict to articles posted within specified timeframe. Values:

bc(code). past


,

bc(code). future


, or

bc(code). any


(both

bc(code). past


and

bc(code). future


). Default:

bc(code). past


. *"expired":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#expired=“boolean”*
 Whether to include articles that have expired or not. Values:

bc(code). 0


(don't include expired articles) or

bc(code). 1


(include expired articles). Default: Setting of preference _Publish expired articles_. *"month":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#month=“yyyy”/“yyyy-mm”/“yyyy-mm-dd”*
 Restrict to articles posted within the specified year/month/day. Default: unset. *"author":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#author=“author name” (Login name)*
 Restrict to articles by specified author(s). Value: (comma separated list of) author name(s). Default: unset, retrieves from all authors. *"sort":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#sort=“sort value(s)”*
 How to sort resulting list. Values:

bc(code). ID


(article id#)

bc(code). AuthorID


(author)

bc(code). LastMod


(date last modified)

bc(code). LastModID


(author of last modification)

bc(code). Posted


(date posted)

bc(code). Expires


(expiry date)

bc(code). Title


bc(code). Category1


bc(code). Category2


bc(code). comments_count


bc(code). Status


bc(code). Section


bc(code). Keywords


bc(code). Image


(article image id#)

bc(code). url_title


bc(code). custom_1


through

bc(code). custom_10


(From 4.2.0 on:

bc(code). custom_//n//


) For numeric values use “

bc(code). (custom_//n//+0)


”

bc(code). rand()


("random":http://dev.mysql.com/doc/refman/5.0/en/mathematical-functions.html#function_rand). Each field in the “textpattern”-table can be used as a sort key. Default:

bc(code). Posted desc


. *"offset":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#offset=“integer”*
 The number of articles to skip. Default:

bc(code). 0


. *"limit":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#limit=“integer”*
 The number of articles to display. Default:

bc(code). 10


. *"allowoverride":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#allowoverride=“boolean”*
 Whether to use override forms for the generated article list. Values:

bc(code). 0


(no) or

bc(code). 1


(yes). Default:

bc(code). 0


. *"form":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#form=“form name”*
 Use specified form. Default:

bc(code). default


.

"common&#95;presentational&#95;attributes":/home/www/zendstudio/dokuwiki/bin/lib/exe/fetch.php?id=&media=common_presentational_attributes

h3(sectionedit2#examples). Examples

h4(#example_1list_articles_published_in_specified_month). Example 1: List articles published in specified month

bc(code). <txp:article_custom form="month_list" sort="Section asc" month="2004-10" />


h4(#example_2select_by_keyword). Example 2: Select by keyword

bc(code). <txp:article_custom sort="Posted desc" keywords="One" />


h4(#example_3select_by_author). Example 3: Select by author

bc(code). <txp:article_custom form="author_list" author="Parkling" />


the *author&#95;list* article form might go thus.

bc(code). <nowiki><p><txp:permlink><txp:title /></txp:permlink></p></nowiki>


Other tags used: "permlink":/home/www/zendstudio/dokuwiki/bin/doku.php?id=permlink, "title":/home/www/zendstudio/dokuwiki/bin/doku.php?id=title

h5(#example_3acontainer_tag). Example 3a: Container tag

The following is exactly equivalent to Example 3:

bc(code). <txp:article_custom author="Parkling">
<p><txp:permlink><txp:title /></txp:permlink></p>
</txp:article_custom>


h4(#example_4combined_with_custom_fields). Example 4: Combined with custom fields

This code will display articles that have a custom field named “colour” with a value “red”:

bc(code). <txp:article_custom colour="red" />


h4(#example_5article_sorting). Example 5: Article sorting

bc(code). <txp:article_custom sort="AuthorID asc, Posted asc" />


*What this does...*
 uses the

bc(code). sort


attribute to define values by which to order article output. In this case two values are declared. _AuthorID asc_ first orders articles alphabetically by author names, then _Posted desc_ orders them by date published (“desc” meaning newest to oldest). *Why you might do it...*
 Sorting is a powerful way to group articles (e.g., by author), and/or give priority to articles most recently published (typically better for your website visitors).

h4(#example_6select_by_article_id_s). Example 6: Select by article ID(s)

bc(code). <txp:article_custom id="81,73" />


*What this does...*
 outputs articles specified by list of IDs order of articles may not match the order of the IDs in the list

bc(code). <txp:article_custom id="81,73" sort="field(id,81,73)" />


*What this does...*
 outputs articles specified by list of IDs, in the order given in the _sort_ field

h3(sectionedit3#genealogy). Genealogy

h4(#version_450). Version 4.5.0

<ul>
<li><p>Added</p>
bc(code). expired


<p>attribute.</p></li>
</ul>

h4(#version_407). Version 4.0.7

<ul>
<li>Can be used as a container tag.</li>
<li>bc(code). id


<p>can take a comma-separated list of IDs.</p></li>
<li>bc(code). wraptag


<p>and</p>
bc(code). break


<p>attributes added.</p></li>
</ul>

h4(#version_406). Version 4.0.6

* Support added for comma separated lists for section, category and author attributes

h4(#version_404). Version 4.0.4

<ul>
<li>bc(code). listform


<p>deprecated (it never made a difference to article&#95;custom anyway)</p></li>
<li>bc(code). sort


<p>added (replaces</p>
bc(code). sortby


<p>and</p>
bc(code). sortdir


<p>)</p></li>
<li>bc(code). sortby


<p>and</p>
bc(code). sortdir


<p>deprecated</p></li>
</ul>

