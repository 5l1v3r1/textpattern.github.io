\n"mininav&#95;tags":/home/www/zendstudio/dokuwiki/bin/lib/exe/fetch.php?id=&media=mininav_tags

bc(code). <txp:custom_field />


The basic "custom&#95;field":/home/www/zendstudio/dokuwiki/bin/doku.php?id=custom_field tag is a _single_ tag and used to display the contents of a custom field.

Custom fields are useful when you need to output content having a consistent structure, usually in context to a particular type of article. Custom fields are defined in "advanced&#95;preferences":/home/www/zendstudio/dokuwiki/bin/doku.php?id=advanced_preferences, and used in the "write":/home/www/zendstudio/dokuwiki/bin/doku.php?id=write panel. There are conditions to be aware of in each case, so be sure to read the following sections, respectively:

* "Defining custom fields":/home/www/zendstudio/dokuwiki/bin/doku.php?id=advanced_preferences#custom_fields
* "Adding custom field data":/home/www/zendstudio/dokuwiki/bin/doku.php?id=write#custom_fields

Also see the "if&#95;custom&#95;field":/home/www/zendstudio/dokuwiki/bin/doku.php?id=if_custom_field conditional tag, which provides more flexibility and power using custom fields.

h3(sectionedit1#attributes). Attributes

Tag will accept the following attributes (*case-sensitive*):

*"default":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#default=“value”*
 Default value to use when field is empty. *"escape":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#escape=“html”*
 Escape HTML entities prior to echoing the field contents. Values:

bc(code). html


or unset Default:

bc(code). html


*"name":/home/www/zendstudio/dokuwiki/bin/doku.php?id=attributes_cross-reference#name=“fieldname”*
 Display specified custom field.

h3(sectionedit2#examples). Examples

h4(#example_1book_reviews). Example 1: Book Reviews

You might, for example, publish book reviews for which you add the author, the title of the book, the publishing company and the year of publication.

With:

<ul>
<li><p>a custom field named “Book&#95;Author” containing</p>
bc(code). J.R.R. Tolkien

</li>
<li><p>a custom field named “Book&#95;Title” containing</p>
bc(code). The Lord of the Rings

</li>
<li><p>a custom field named “Book&#95;Publisher” containing</p>
bc(code). HarperCollins

</li>
<li><p>a custom field named “Book&#95;Year” containing</p>
bc(code). 2004

</li>
</ul>

and an article form like the following:

bc(code). <p><txp:custom_field name="Book_Author" />: <txp:custom_field name="Book_Title" /><br />
    Published by <txp:custom_field name="Book_Publisher" /> in <txp:custom_field name="Book_Year" />.</p>


HTML returned would be:

bc(code). <p>J.R.R. Tolkien: The Lord of the Rings<br />
    Published by HarperCollins in 2004.</p>


h4(#example_2power_a_linklog). Example 2: Power A Linklog

This works well with "a&#124;variation of Sencer's Txp bookmarklet":http://thresholdstate.com/download/txp-bookmarklet-0.1.txt.

With an article title of

bc(code). Textpattern


, an excerpt of

bc(code). Textpattern is awesome.


, a custom field named “Link” containing

bc(code). <nowiki>http://textpattern.com/</nowiki>


, and an article form like the following:

bc(code). <div class="linklog-entry">
    <div style="float: left;"><a href="<txp:custom_field name="Link" />"><txp:title /></a></div>
    <div style="float: right;"><txp:posted format="%d %d %Y" /></div><br>
    <txp:excerpt />
</div>


HTML returned would be:

bc(code). <div class="linklog-entry">
    <div style="float: left;"><a href="http://textpattern.com/">Textpattern</a></div>
    <div style="float: right;"><txp:posted format="08 Aug 2005" /></div>
    <p>Textpattern is awesome.</p>
</div>


Other tags used: "title":/home/www/zendstudio/dokuwiki/bin/doku.php?id=title, "posted":/home/www/zendstudio/dokuwiki/bin/doku.php?id=posted, "excerpt":/home/www/zendstudio/dokuwiki/bin/doku.php?id=excerpt

h4(#example_3unescaping_html_output). Example 3: Unescaping HTML output

With a custom field named “foo” containing:

bc(code). <a href="../here/">


using the following:

bc(code). <txp:custom_field name="foo" />


will return this hunk of HTML:

bc(code). &#60;a href=&#34;../here/&#34;&#62;


whereas using:

bc(code). <txp:custom_field name="foo" escape="" />


will render the URL as you'd expect, exactly as written in the custom field itself. Thus, it will be rendered as a link by the browser.

