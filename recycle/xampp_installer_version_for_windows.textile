\n"stop":/home/www/zendstudio/dokuwiki/bin/lib/exe/fetch.php?id=&media=stop

*Alert:* This doc is outdated, no longer supported, and marked for deletion. The updated XAMPP for Windows document that TextBook will continue to support is "Using XAMPP for Windows":http://textbook.textpattern.net/wiki/index.php?title=Using_XAMPP_%28Apache-MySQL-PHP-Perl%29_for_Windows. Please go there and update your bookmark accordingly.

h3(sectionedit1#overview). Overview

This write-up describes how to set up and use a *XAMPP Installer* package for Textpattern development on a Windows machine. Furthermore, these instructions assume you will be installing the XAMPP package in the default location on your machine, namely *c:\apachefriends*.

*Note:* If you are a “purist” and prefer normal ZIP packages and handling files manually, then you might find the "using_xampp_apache-my_sql-php-perl_for_windows":/home/www/zendstudio/dokuwiki/bin/doku.php?id=using_xampp_apache-my_sql-php-perl_for_windows instructions more suitable.

Keep in mind that using a local install of XAMPP as a publishing server to the Internet is a _very bad_ idea; use it only as a local development server! Also keep in mind that a local install of XAMPP does not emulate a live server environement (it's just not that robust), so if your project involves integrating other applications into Textpattern, you may run into problems (out of scope here); however, it should be fine for Textpattern only development and testing.

h4(#what_you_will_need). What You Will Need

To use XAMPP you will need:

# Full administrative rights on your workstation and access to your Firewall settings.
# A text editor, preferably with the ability to show line numbers like "TextPad":http://www.textpad.com/ or "Crimson Editor":http://www.crimsoneditor.com/ (recommended). *Warning:* do NOT use Notepad! Not only does Notepad not read extensionless files (like you will be needing to edit in these instructions), but it can corrupt extensionless files as well, and that's not good.
# A copy of the latest *XAMPP Installer package*, which you can download from "Apache Friends":http://www.apachefriends.org/en/xampp.html. Make sure you get the one for windows  -  "XAMPP for Windows":http://www.apachefriends.org/en/xampp-windows.html (see package _specifications_ on download page).

h4(#installation_considerations). Installation Considerations

* If you already have a server installed in your local root (e.g. IIS Server, ColdFusion Server, etc.), you will not be able to launch XAMPP after installing it due to a port-binding conflict. The safest (albeit perhaps not the most convenient) solution is to uninstall whatever system/application that is already binding the port. IIS Server is often a common culprit because it's already a part of your PC; so if you have a port-binding conflict, see if you need to "disable IIS Server":http://www.louisville.edu/it/twotier/securexp/IIS.htm on your system. Another option would be to install XAMPP in another drive (such as an external drive) or in a drive partition; anywhere that a port-binding conflict can be avoided while still keeping your other server type installed. Other solutions might exist, but they are not well documented anywhere, and in any case are out of scope here.
* During installation, or after it is done, you may see your _Windows Firewall_ system indicate that some utilities and/or files are blocked (e.g., the Apache server itself). Again, do not use a local install for production purposes (development only), go ahead and unblock the indicated utilities and/or files.

h3(sectionedit2#xampp_installation). XAMPP Installation

# Select the XAMPP _Installer_ package from the "XAMPP for Windows":http://www.apachefriends.org/en/xampp-windows.html download page. You'll be directed to a another Web page offering a number of mirror sites. Pick the one that is closest to your geographic location.
# As the download process proceeds, you'll be asked to select the install location. As mentioned already, it is assumed here you will be using the XAMPP default, which is your local machine's hard drive so your install path will be *_c:\apachefriends_*.

*Note:* If you have another physical drive location you want to use (e.g., an external drive), you could just change the drive letter and leave the directory name the same (e.g., *_g:\_*_apachefriends_); but, again, we continue here with th assumption it will be *_c:\apachefriends_*.

# When your installation has finished, you should have two icons on your desktop, one being a _XAMPP Installer Executable_ and one for a _XAMPP Control Panel_. You can delete the _executable_ icon since the Installer already installed XAMPP for you, but keep the control panel icon (Figure 1); you can use it to start and stop the Apache server and MySQL database easily without having to access these utility files in the root directory.

"!/home/www/zendstudio/dokuwiki/bin/lib/exe/fetch.php?media=file:xampp_win_fig01_icon.gif!":/home/www/zendstudio/dokuwiki/bin/lib/exe/detail.php?id=&media=file:xampp_win_fig01_icon.gif

*Figure 1: The XAMPP Control icon.*

*Note:* XAMPP is completely independent from your system's registry so if you ever want to uninstall XAMPP from your computer, you can do so easily and cleanly. The uninstall file is located at *c:\apachefriends\xampp\uninstall.exe*, or you can use the _Add/Remove_ utility in your Windows control panel.

XAMPP is now installed in the root of your hard drive and you are ready to proceed to the next phase: checking to make sure XAMPP components are indeed activited and your installation is secure.

h3(sectionedit3#checking_the_status_of_the_installed_xampp_components). Checking the Status of the Installed XAMPP Components

Let's test Apache and see if it is working.

# First you need to turn your critical XAMPP components on. Click the XAMPP Control icon that was added to your desktop (Figure 1). This will open the XAMPP Control panel where you will see four module buttons (Figure 2). Click the start buttons for the Apache (server) and MySQL (database) modules.

"!/home/www/zendstudio/dokuwiki/bin/lib/exe/fetch.php?media=file:xampp_win_fig02_control.gif!":/home/www/zendstudio/dokuwiki/bin/lib/exe/detail.php?id=&media=file:xampp_win_fig02_control.gif

*Figure 2: The XAMPP Control panel.*

*Notes:* The Control panel basically provides the ability to easily turn the server and database on and off without having to access the corresponding utility files in the root installation directory; furthermore, it prevents you from having to have a shell window open while working with XAMPP, because the Control panel functions as the _live_ connection (so long as you have started the modules). You will need to turn the modules on before working with the server or database, and turn them off again when done. The FileZillaFTP and Mercury e-mail modules are out of scope and therefore will not be discussed.

<ol>
<li><p>Open your browser and type the following...</p>
bc(code). http://localhost/


<p>You should get a XAMPP splash screen that gives you the option to work in a variety of languages (Figure 3).</p></li>
</ol>

"!/home/www/zendstudio/dokuwiki/bin/lib/exe/fetch.php?media=file:xampp_win_fig03_splash.gif!":/home/www/zendstudio/dokuwiki/bin/lib/exe/detail.php?id=&media=file:xampp_win_fig03_splash.gif

*Figure 3: XAMPP Splash Screen.*

We will continue to follow using the English language.

# After following the appropriate language link (again, here it is English), you will be taken to the XAMPP Welcome page (Figure 4).

"!/home/www/zendstudio/dokuwiki/bin/lib/exe/fetch.php?media=file:xampp_win_fig04_welcome.gif!":/home/www/zendstudio/dokuwiki/bin/lib/exe/detail.php?id=&media=file:xampp_win_fig04_welcome.gif

*Figure 4: XAMPP Welcome page.*

*Note:* You might consider bookmarking this link in your Web browser for easy reference, and give the bookmark a useful label like “*XAMPP Index*”. You will undoubtedly be coming back to this page at some point to access the list of links on the left side; for example you will need access to the phpMyAdmin link (under the Tools) section later when working with the database.

# As it states on the Welcome page, you need to check the status of your system. Do this by clicking the “status” link in the left column of the Status page. You will see a XAMPP Status table with a list of components, showing whether or not the components are “activated” or “deactivated” (Figure 5).

"!/home/www/zendstudio/dokuwiki/bin/lib/exe/fetch.php?media=file:xampp_win_fig05_status.gif!":/home/www/zendstudio/dokuwiki/bin/lib/exe/detail.php?id=&media=file:xampp_win_fig05_status.gif

*Figure 5: XAMPP Component Status.*

If you get a table similar to the one shown in Figure 5, where most of your components are _activated_, then you are in good shape.

Because you should not be using XAMPP for production purposes (development only), it is not necessary to make the security precautions that you would otherwise do. Nevertheless it might be confusing if we don't clear a few things up, so we will do that next.

h3(sectionedit4#xampp_security_considerations). XAMPP Security Considerations

Using open XAMPP page in your browser, click the _Security_ link in the left column, you should see a page with a table showing a list of _Subjects_, and what the security status of each subject is (Figure 6).

"!/home/www/zendstudio/dokuwiki/bin/lib/exe/fetch.php?media=file:xampp_win_fig06_security.gif!":/home/www/zendstudio/dokuwiki/bin/lib/exe/detail.php?id=&media=file:xampp_win_fig06_security.gif

*Figure 6: XAMPP Subject Security.*

All of those red “unsecure” readings are not as bad as they appear; here are some things to consider:

* If you are not connected to the Internet, or to a network of local users (e.g. a home network), then you do not need to take steps to make all of the subjects “secure.” You can of course do so anyway, but making the subjects secure requires additional password layers (one for the “apachefriends” directory and one for the MySQL database) which may get tedious to deal with if you work with XAMPP a lot.
* If you are online (but still only doing development) and have a Windows Firewall running, then you also are reasonably safe and do not need to take steps to make everything secure. However, in this case you should make the following configuration changes in your Windows Firewall, because by default all the XAMPP services and process are added to the firewall as unblocked, i.e., the “_Any computer (including those on the internet)_” is selected as having access to the components:

# Go to _Control Panel &gt; Windows Firewall &gt; Exceptions_ (tab).
# Select a given XAMPP component in the list, then click _Edit_
# Then click _Change Scope_.
# Then change it to “_My Network (subnet only)_”.

If you do decide to make XAMPP components secure anyway, it's recommended that you *do not* “_safe mode_” the PHP subject (last subject in the table), as it limits featurs for PHP development.

Speaking of PHP, let's quickly consider that next since it is relevent to all this development we speak of.

h3(sectionedit5#considering_the_phpinfo_information). Considering the //PHPinfo()// Information

Go back to your browser and look at the last link under the top section of the left column, you'll see a link for “_phpinfo()_”; if you click that link you will see a page similar to Figure 6.5.

"!/home/www/zendstudio/dokuwiki/bin/lib/exe/fetch.php?media=file:xampp_win_fig07_php-info.gif!":/home/www/zendstudio/dokuwiki/bin/lib/exe/detail.php?id=&media=file:xampp_win_fig07_php-info.gif

*Figure 7: Your system's PHP information.*

h4(#php_considerations). PHP Considerations

* If needed, you can switch back and forth between php 5 (default) and php 4 through a batch file program (convenient).
* You can verify any changes or configurations from the PHP info page (added modules, PHP, MySQL etc.).
* You definetely cannot rely on the information provided on the status page, in the case you had made any changes in your configuration files. Just refer to PHP info for any configuration information.
* If you work with PHP 5, the _mod_php5_ module will be loaded in your _httpd.conf_ file by default, if you switch to php4, PHP will run through CGI_API, which might not be the same as on a live server environement.

Now that you have XAMPP installed and know a thing or two about the components, let's begin making some modifications to get it ready for use with Textpattern; we'll start by adding _mod_rewrite_ abilities to the Apache server.

h3(sectionedit6#adding_the_mod_rewrite_module_to_the_apache_server). Adding the //Mod_Rewrite// Module to the Apache Server

Considering that Textpattern makes use of using mode_rewrite to make "Clean URLs":/home/www/zendstudio/dokuwiki/bin/doku.php?id=glossary#clean_urls work (and perhaps other important functions), you need to turn that on in the Apache configuration file.

<ol>
<li><p>Open *_httpd.conf_* (located in</p>
bc(code). c:\apachefriends\xampp\apache\conf\httpd.conf


<p>) with Crimson Editor (or TypePad, etc.).</p></li>
</ol>

# Scroll down to the “Dynamic shared Objects” section (about line 125), here you can switch modules on and off or enter new module directives. You are going to to activate (essentially _turn on_) the *_mod_rewrite.so_* directive (line *168*); to do this, you simply uncomment the line by removing the octothorpe (#), also known as a _hash_ sign, at the beginning of the line. If the hash is already gone, then you are fine.

*Note:* Textpattern relies on some rewrite rules externally through a _.htaccess_ file, so you have to turn the *_mod_rewrite.so_* directive on. If you want to learn more here is the rewrite "documentation":http://httpd.apache.org/docs/misc/rewriteguide.html .

h3(sectionedit7#creating_virtual_host_containers). Creating Virtual Host Containers

If you want the ability to test multiple sites on your testing Server, you need to have a virtual host container set up for each one or you will have conflicts. (In this example, this process is refered to as name-based virtual hosting.)

h4(#modifying_the_apache_httpdconf_file). Modifying the Apache //httpd.conf// File

# Scroll down to the bottom of *'httpd.conf*', you should see a section for setting up a virtual host with a *VirtualHost* example. The entire block looks something like this:

bc(code). #NameVirtualHost *
#
# VirtualHost example:
# Almost any Apache directive may go into a VirtualHost container.
# The first VirtualHost section is used for requests without a known
# server name.
#
#<VirtualHost *>
#    ServerAdmin webmaster@dummy-host.example.com
#    DocumentRoot /www/docs/dummy-host.example.com
#    ServerName dummy-host.example.com
#    ErrorLog logs/dummy-host.example.com-error_log
#    CustomLog logs/dummy-host.example.com-access_log common
#</VirtualHost>


Leave the example in place, it is not hurting anything by being there.

<ol>
<li><p>Copy the third line in the block above (</p>
bc(code). #NameVirtualHost *


<p>), paste it on a new line under the example block (the bottom of your file), delete the octothorpe (#) to uncomment the line, and replace the asterisk (&#42;) with your localhost IP (127.0.0.1) using port 80. You should end up with a line like this...</p></li>
</ol>

bc(code). NameVirtualHost 127.0.0.1:80


<ol>
<li><p>Now copy the Virtual Host directives from the example block above (starting with</p>
bc(code). <VirtualHost *>


<p>and ending with</p>
bc(code). </VirtualHost>


<p>and paste them under the line you added in the previous step. Remove all the octothorpes (#) to uncomment the lines. Then edit the lines so your first Virtual Host directives block looks as follows...</p></li>
</ol>

bc(code). <VirtualHost 127.0.0.1:80>
    ServerAdmin admin@localhost
    DocumentRoot /apachefriends/xampp/htdocs/xampp
    ServerName localhost
    <Directory "/apachefriends/xampp/htdocs/xampp">
     Options Indexes FollowSymLinks ExecCGI
    </Directory>
</VirtualHost>


There are some important things to note here.

<ul>
<li>First, in the 'ServerAdmin' line, you can leave “admin” or replace it with whatever ID you want; you are actually designating that value here (not pulling it from somewhere else) so it makes no difference what you use.</li>
<li><p>Second, because we are setting up development directories outside of the htdocs root location (path indicated in 'DocumentRoot' line), it is necessary to add the</p>
bc(code). <Directory > ... </Directory>


<p>directive, which tells Apache to look for the locations elsewhere via SymLinks.</p></li>
<li>Third, you could leave the 'ErrorLog' and 'CustomLog' directives in, and in fact the 'ErrorLog' might prove useful to you, but they are not necessary and for simplicity we are not using them here. You should refer to the (where) for more information about all the directives and their uses.</li>
</ul>

<ol>
<li><p>Now you need a new set of Virtual Host directives for each development location on your local computer. You also need to include the</p>
bc(code). NameVirtualHost *:80


<p>line (described earlier) above each new block of directives you create. For demonstration purposes, let's say you wanted to add all your development sites (e.g., _site1_, _site2_, _site3_, etc.) in your computer's root under a single directory called _MySites_ (i.e.,</p>
bc(code). c:\MySites\site1


<p>,</p>
bc(code). c:\MySites\site2


<p>,</p>
bc(code). c:\MySites\site3


<p>, etc.). In such a case, you would need a set of Virtual Host directives for each site.</p></li>
</ol>

For the first site (_site1_) you would have the following block of directives...

<pre class="code">
NameVirtualHost local.site1.com:80

&lt;VirtualHost 127.0.0.1:80&gt;
   ServerAdmin admin@local.site1.com
   DocumentRoot c:/MySites/site1
   ServerName local.site1.com
   &lt;Directory c:/MySites/site1&gt;
        Options Indexes FollowSymLinks 
        AllowOverride FileInfo
   &lt;/Directory&gt;
&lt;/VirtualHost&gt;
</pre>

*Note:* Take notice that the 'NameVirtualHost' and the two directives 'ServerAdmin' and 'ServerName' utilize domain names (e.g.,

bc(code). local.site1.com


). It is assumed here that the folders, _site1_, _site2_, _site3_, etc. are named after real domain names that you have (or will eventually have) online. The

bc(code). .local


is added to the local site (domain) name to distinguish the development domain from the real domain online. The idea being that you will eventually transfer your development work to the live location, and you want to ensure your path editing is easy and logical (i.e., you will only have to drop the

bc(code). .local


part from the path in your Textpattern's

bc(code). config.php


file when making the transfer. Be mindful, however, of the other database variables (database name, Textpattern table prefix, and so forth) in Textpattern's

bc(code). config.php


file).

For each additional development site you wanted to add (i.e., _site2_, _site3_, etc.) you would add the same block of code above at the bottom of the

bc(code). http.conf


file, and change the folder name accordingly (i.e., from _site1_ to _site2_, etc.).

Save your changes to the

bc(code). http.conf


file.

h4(#modifying_the_local_hosts_file). Modifying the Local //hosts// File

We are not done yet, because working with non registered domains would result in a DNS conflict, so you need to point to each of your virtual locations in your local _hosts_ file.

<ol>
<li>Browse to and open your hosts file.
<ul>
<li><p>If you are on win2k this file should be located at</p>
bc(code). c:\WINNT\system32\drivers\etc\hosts

</li>
<li><p>If you are on XP, this file should be located at</p>
bc(code). c:\WINDOWS\system32\drivers\etc\hosts

</li>
</ul>
</li>
</ol>

<ol>
<li><p>At the bottom of the</p>
bc(code). hosts


<p>file, make sure you have a pointer for the 'localhost', and one for each development domain you need, suggested as follows...</p></li>
</ol>

bc(code).      127.0.0.1  localhost
     127.0.0.1  local.site1.com
     127.0.0.1  local.site2.com
     127.0.0.1  local.site3.com
     etc


*Note:* Use a tab space between the IP and the domain name - or at least a space.

<ol>
<li><p>Save your changes and restart Apache and MySQL. and see if your local domain is accessible from your browser. You should be able to access the _somedomain_ index page. You should now be able to access your local development sites from your browser without having a DNS conflict with any live sites you have; e.g.,</p>
bc(code). local.site1.com


<p>and</p>
bc(code). www.site1.com


<p>. In essence, your development domain is now like a subdomain of your live site.</p></li>
</ol>

*Notes:*

* Restart your server each time you make a change in _httpd.conf_ in order for the changes to take effect.
* If you have problems, try rebooting your computer, which is sometimes necessary when the _hosts_ file is edited.

h4(#checking_the_virtual_host_paths_to_make_sure_they_work). Checking the Virtual Host Paths to Make Sure They Work

Since you likely do not have Textpattern installed in your development locations yet, you can simply add any old HTML file you have on hand for path testing purposes.

<ol>
<li><p>Add an HTML file into a development location (i.e.,</p>
bc(code). c:\MySites\site1


<p>), and name the HTML file</p>
bc(code). index.html


<p>.</p></li>
<li>Restart Apache and MySQL, and see if your local domain is accessible from your browser. For example, you should be able to access (for testing purposes) the _site1_ index page by using...</li>
</ol>

http:local.site1.com/index.html.

*Note:* Looking ahead a bit  -  once you eventually have Textpattern installed in the _site1_ folder (for example), your path for intalling Textpattern will be...

bc(code). http:local.site1.com/textpattern/setup/index.php


h3(sectionedit8#preparing_xampp_for_textpattern). Preparing XAMPP for Textpattern

Although this write-up will not cover how to install Textpattern itself on your machine (see last section below), there are a couple more preparation steps to get XAMPP ready for use with Textpattern: create a database and configure a mail client (the latter to test e-mail notification features).

h4(#database_creation_under_phpmyadmin). Database Creation Under //phpMyAdmin//

OK, it is time to get your database setup.

# Using the XAMPP Control panel (remember the icon on your desktop?), start your Apache server and MySQL database modules.
# Open a browser and navigate to the XAMPP start page (you were encouraged to bookmark this in an earlier section, you might do so now if you have not)...

bc(code). http://localhost/


# Click the _phpMyAdmin_ link under the Tools section in the left column to access your local phpMyAdmin interface (Figure 7). Enter a name in the *Create new database* .

"!/home/www/zendstudio/dokuwiki/bin/lib/exe/fetch.php?media=file:xampp_win_fig08_php_my_admin.gif!":/home/www/zendstudio/dokuwiki/bin/lib/exe/detail.php?id=&media=file:xampp_win_fig08_php_my_admin.gif

*Figure 8: phpMyAdmin Interface*

Once you hit the create button your database is created (see screenshot below). "!/home/www/zendstudio/dokuwiki/bin/lib/exe/fetch.php?media=file:xampp_win_fig09_database.gif!":/home/www/zendstudio/dokuwiki/bin/lib/exe/detail.php?id=&media=file:xampp_win_fig09_database.gif

*Figure 9: Newly created MySQL database in XAMPP.*

h4(#local_smtp_mail_client_configuration). Local SMTP mail client configuration

# Setup a local mail client, such as Outlook or Thunderbird, under an account _newuser&#64;localhost_. (Note: This is already configured by default on the mercury mail server that comes with XAMPP, but you can set-up your own users, we just take the default here for the sake of simplicity.)

# Start mercury mailserver from the XAMPP control,the settings are documented under the splash screen mercury side link.

h4(#textpattern_retrieval_setup_and_post_configuration). Textpattern Retrieval, Setup, and Post configuration

At this point you have covered the XAMPP process and are ready to switch to Textpattern. First you will need to install Textpattern in your new Apache server setup, and there are two ways to do it: manually, and via "Subversion":/home/www/zendstudio/dokuwiki/bin/doku.php?id=glossary#subversion (SVN):

* If manually, see the "detailed_installation_instructions":/home/www/zendstudio/dokuwiki/bin/doku.php?id=detailed_installation_instructions.
* If via SVN, follow an appropriate method offered earlier in "_advanced_topics":/home/www/zendstudio/dokuwiki/bin/doku.php?id=chapter_5:advanced_topics.

