\n"mininav_core_function_reference":/home/www/zendstudio/dokuwiki/bin/lib/exe/fetch.php?id=&media=mininav_core_function_reference

h3(sectionedit1#description). Description

string "safe_pfx":/home/www/zendstudio/dokuwiki/bin/doku.php?id=safe_pfx ( string _$table_ )

Prepares the table name for use in "safe_query()":/home/www/zendstudio/dokuwiki/bin/doku.php?id=safe_query.

h3(sectionedit2#parameters). Parameters

*table*
 standard "Txp table name":/home/www/zendstudio/dokuwiki/bin/doku.php?id=database_schema_reference (without "pfx":/home/www/zendstudio/dokuwiki/bin/doku.php?id=pfx prefix).

h3(sectionedit3#return_values). Return Values

Returns _table_ after prefixing any installation-based prefix ("pfx":/home/www/zendstudio/dokuwiki/bin/doku.php?id=pfx), and quoting in backticks if necessary.

h3(sectionedit4#changelog). Changelog

* First appeared "r1207":http://code.google.com/p/textpattern/source/diff?spec=svn1207&r=1207&format=side&path=/development/4.0/textpattern/lib/txplib_db.php
* First release "v4.0.4":http://code.google.com/p/textpattern/source/browse/releases/4.0.4/

h3(sectionedit5#examples). Examples

bc(code). $t1 = safe_pfx('txp_category');
$t2 = safe_pfx('textpattern');
$sql = "select distinct name from $t1 join $t2 on name=category1";
$rs = safe_query($sql);


h3(sectionedit6#see_also). See Also

"safe_query()":/home/www/zendstudio/dokuwiki/bin/doku.php?id=safe_query

h3(sectionedit7#notes). Notes

You should generally use *safe_pfx()* on any query going directly to "safe_query()":/home/www/zendstudio/dokuwiki/bin/doku.php?id=safe_query. For simple database calls it is better to use the higher-level functions:

* "safe_row()":/home/www/zendstudio/dokuwiki/bin/doku.php?id=safe_row
* "safe_rows()":/home/www/zendstudio/dokuwiki/bin/doku.php?id=safe_rows
* "safe_rows_start()":/home/www/zendstudio/dokuwiki/bin/doku.php?id=safe_rows_start
* "safe_upsert()":/home/www/zendstudio/dokuwiki/bin/doku.php?id=safe_upsert
* "safe_delete()":/home/www/zendstudio/dokuwiki/bin/doku.php?id=safe_delete

etc., all of which handle the necessary call to *safe_pfx()*.

