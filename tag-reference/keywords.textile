h1. Keywords

h2. Syntax

bc. <txp:keywords />

The *keywords* tag is a _single_ tag that Textpattern will replace with the keywords associated with the article being displayed. The tag can be used in a Textpattern 'article' type [[Form template]], or within a [[Page template]], either wrapped within a given article tag, or directly in the template itself so long as the context is with a single article (as opposed to an article list). For keywords metadata, see the "meta_keywords":meta-keywords.textile tag.

h2. Attributes

This tag has no attributes.

h2. Examples

h3. Example 1: Display keywords in context of an article form

bc. <h1>
    <txp:permlink>
        <txp:title />
    </txp:permlink>
</h1>
<p>
    Date:
    <txp:posted />
</p>
<p>
    Keywords:
    <txp:keywords />
</p>
<txp:excerpt />
<txp:body />

In this example, keywords are used in a Textpattern 'article' type [[Form template]] along with other article components. The keywords themselves are used like a list of topical 'tags', e.g., like you would use for more granular searching. The keywords would be presented above the article's excerpt.

Other tags used: "permlink":permlink.textile, "title":title.textile, "posted":posted.textile, "excerpt":excerpt.textile, "body":body.textile.

Example 2: Use keywords to fill meta element values

bc. <meta name="keywords" content="<txp:keywords />">

In this example, keywords are used directly in a page (template) to insert @content=""@ values in a @meta@ element. This works if the context is a single article being displayed.

The same result can be done by putting the keywords inside an if individual article tag (though a bit more code than necessary):

bc. <txp:if_individual_article>
    <meta name="keywords" content="<txp:keywords />">
</txp:if_individual_article>

In both of the above, if a given article has keywords associated with it, they will fill the @meta@ value. If not, the @meta@ element remains with no @content=""@ values. This might be okay if you know for sure all articles will have keywords assigned. If not, a metadata tag in your template with no value might not be desired. In which case you could set it up as a condition; if there are no keywords on the article, the entire @meta@ element is not added to the template:

bc. <txp:if_keywords>
    <meta name="keywords" content="<txp:keywords />">
</txp:if_keywords>

Either of these uses might work well for certain pages where a single article is in context, but it doesn't account for other page contexts, like home pages with complex content layouts, or pages displaying article lists (rather than single articles). In other words, these are not copy/paste solutions for every template in your site. You may, in fact, create some metadata values manually if the context of certain pages doesn't change much.

Other tags used: "if_individual_article":if-individual-article.textile, "if_keywords":if-keywords.textile.
